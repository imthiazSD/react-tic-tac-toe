{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Board/index.js","pages/Game/game.helpers.js","pages/Game/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","Board","rows","handleCellClick","className","data-testid","map","row","yIndex","rowItem","xIndex","onClick","e","getWinner","players","winningLines","j","playerMark","cell1","cell2","cell3","Game","useState","setRows","isPlayerOne","setIsPlayerOne","moves","setMoves","finished","setFinished","useEffect","winner","console","log","toast","error","position","x","y","data","index","updateCell"],"mappings":"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","file":"static/js/3.676d3bb9.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport \"./board.css\";\n\nexport default function Board({ rows, handleCellClick }) {\n  return (\n    <div className=\"board\" data-testid=\"board\">\n      {rows.map((row, yIndex) => {\n        return (\n          <div className=\"board-row\" key={`row_${yIndex}`}>\n            {row.map((rowItem, xIndex) => {\n              return (\n                <div\n                  className=\"board-cell\"\n                  data-testid={`cell_${yIndex}-${xIndex}`}\n                  key={`cell_${xIndex}`}\n                  onClick={(e) => handleCellClick(xIndex, yIndex)}\n                >\n                  <p>{rowItem || \"\"}</p>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","export function updateCell(rows, x, y, data) {\n  return rows.map((row, index) => {\n    if (index === y && !row[x]) {\n      row[x] = data;\n    }\n    return row;\n  });\n}\n\n//  0 0 0\n//  0 0 0\n//  0 0 0\n\nexport function getWinner(rows) {\n  let winner = null;\n  let players = [\"X\", \"O\"];\n  const winningLines = [\n    // array of arrays of arrays of y,x values\n    [\n      [0, 0],\n      [0, 1],\n      [0, 2],\n    ],\n    [\n      [1, 0],\n      [1, 1],\n      [1, 2],\n    ],\n    [\n      [2, 0],\n      [2, 1],\n      [2, 2],\n    ],\n    [\n      [0, 0],\n      [1, 0],\n      [2, 0],\n    ],\n    [\n      [0, 1],\n      [1, 1],\n      [2, 1],\n    ],\n    [\n      [0, 2],\n      [1, 2],\n      [2, 2],\n    ],\n    [\n      [0, 0],\n      [1, 1],\n      [2, 2],\n    ],\n    [\n      [2, 0],\n      [1, 1],\n      [0, 2],\n    ],\n  ];\n\n  for (let i = 0; i < winningLines.length; i++) {\n    for (let j = 0; j < players.length; j++) {\n      const playerMark = players[j];\n      const currentLine = winningLines[i];\n      const [cell1, cell2, cell3] = currentLine;\n      if (\n        rows[cell1[0]][cell1[1]] &&\n        rows[cell1[0]][cell1[1]] === playerMark &&\n        rows[cell1[0]][cell1[1]] === rows[cell2[0]][cell2[1]] &&\n        rows[cell2[0]][cell2[1]] === rows[cell3[0]][cell3[1]]\n      ) {\n        return playerMark;\n      }\n    }\n  }\n\n  return winner;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Board from \"../../components/Board\";\nimport { updateCell, getWinner } from \"./game.helpers\";\nimport { toast } from \"react-toastify\";\nimport \"./game.css\";\n\nexport default function Game() {\n  const [rows, setRows] = useState([\n    [null, null, null],\n    [null, null, null],\n    [null, null, null],\n  ]);\n  const [isPlayerOne, setIsPlayerOne] = useState(true);\n  const [moves, setMoves] = useState(0);\n  const [finished, setFinished] = useState(false);\n\n  useEffect(() => {\n    // If moves is greater or equal to 5 run winner algo\n    const winner = getWinner(rows);\n    console.log(\"ROW\");\n    console.log(\"called\");\n\n    if (winner) {\n      toast.error(`${winner} has won!`, { position: \"top-center\" });\n      setFinished(true);\n    }\n  }, [rows]);\n\n  useEffect(() => {\n    if (moves >= 9) {\n      const winner = getWinner(rows);\n      setFinished(true);\n      if (!winner) {\n        toast.error(\"Its a draw!\", { position: \"top-center\" });\n      }\n    }\n  }, [moves]);\n\n  useEffect(() => {\n    if (finished) setMoves(0);\n  }, [finished]);\n\n  const resetBoard = () => {\n    setRows([\n      [null, null, null],\n      [null, null, null],\n      [null, null, null],\n    ]);\n    setIsPlayerOne(true);\n    setFinished(false);\n  };\n\n  const handleCellClick = (x, y) => {\n    if (finished) return;\n    // return if the cell has already been marked\n    if (rows[y][x]) {\n      return;\n    }\n    setRows(updateCell(rows, x, y, isPlayerOne ? \"X\" : \"O\"));\n    setIsPlayerOne(!isPlayerOne);\n    setMoves(moves + 1);\n  };\n\n  return (\n    <div className=\"game\">\n      <div>\n        {finished ? (\n          <button\n            className=\"btn-play-again\"\n            data-testid=\"btn-reset\"\n            onClick={(e) => {\n              resetBoard();\n            }}\n          >\n            Play again\n          </button>\n        ) : (\n          <h1>{`${isPlayerOne ? \"X\" : \"O\"}'s turn`}</h1>\n        )}\n      </div>\n      <Board rows={rows} handleCellClick={handleCellClick} />\n    </div>\n  );\n}\n"],"sourceRoot":""}